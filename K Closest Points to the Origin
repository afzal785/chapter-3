import heapq

def kClosest(points, k):
    heap = []
    for x, y in points:
        dist = -(x*x + y*y)
        if len(heap) == k:
            heapq.heappushpop(heap, (dist, x, y))
        else:
            heapq.heappush(heap, (dist, x, y))
    return [(x, y) for (dist, x, y) in heap]

# Test Cases
points1 = [[1, 3], [-2, 2], [5, 8], [0, 1]]
k1 = 2
print(kClosest(points1, k1))  # Output: [[-2, 2], [0, 1]]

points2 = [[1, 3], [-2, 2]]
k2 = 1
print(kClosest(points2, k2))  # Output: [[-2, 2]]

points3 = [[3, 3], [5, -1], [-2, 4]]
k3 = 2
print(kClosest(points3, k3))  # Output: [[3, 3], [-2, 4]]
