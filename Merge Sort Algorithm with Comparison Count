def merge_sort(arr):
    comparisons = 0

    if len(arr) > 1:
        mid = len(arr) // 2
        left_half = arr[:mid]
        right_half = arr[mid:]

        comparisons += merge_sort(left_half)
        comparisons += merge_sort(right_half)
        i = j = k = 0
        while i < len(left_half) and j < len(right_half):
            if left_half[i] < right_half[j]:
                arr[k] = left_half[i]
                i += 1
            else:
                arr[k] = right_half[j]
                j += 1
                comparisons += 1
            k += 1
        while i < len(left_half):
            arr[k] = left_half[i]
            i += 1
            k += 1
        while j < len(right_half):
            arr[k] = right_half[j]
            j += 1
            k += 1
    return comparisons
def merge_sort_and_count(arr):
    comparisons = merge_sort(arr)
    print(comparisons, end=",")
    print(*arr)
arr1 = [12, 4, 78, 23, 45, 67, 89, 1]
merge_sort_and_count(arr1)
arr2 = [38, 27, 43, 3, 9, 82, 10]
merge_sort_and_count(arr2)
